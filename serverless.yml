service: appointment-backend

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: dev
  environment:
    APPOINTMENT_TOPIC_ARN: arn:aws:sns:us-east-2:759799978288:APPOINTMENT_TOPIC
    APPOINTMENTS_TABLE: appointments
    RDS_HOST: appointment-db.c9ywiwkicl8m.us-east-2.rds.amazonaws.com
    RDS_USER: admin
    RDS_PASSWORD: adminawstest
    RDS_DB_NAME: appointments
  # vpc:
  #   securityGroupIds:
  #     - sg-067d7213d0187d6a8      # ID del security group que permita el acceso a RDS
  #   subnetIds:
  #     - subnet-00e62ff7c3f28a2c7  # Subnets de tu VPC que tengan acceso a RDS
  #     - subnet-023b7fbc009847ee0
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:UpdateItem
            - sns:Publish
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            - events:PutEvents
          Resource: "*"

functions:
  postAppointment:
    handler: src/interfaces/handlers/postAppointment.handler
    events:
      - http:
          path: appointments
          method: post

  getAppointments:
    handler: src/interfaces/handlers/getAppointments.handler
    events:
      - http:
          path: appointments/{insuredId}
          method: get

  appointment_pe:
    handler: src/interfaces/handlers/appointment_pe.handler
    timeout: 30
    events:
      - sqs:
          arn: 
            Fn::GetAtt: [SQSPE, Arn]

resources:
  Resources:
    AppointmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: appointments
        AttributeDefinitions:
          - AttributeName: insuredId
            AttributeType: S
        KeySchema:
          - AttributeName: insuredId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    SQSPE:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE

    SQSCL:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_CL

    SNSSubscriptionPE:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: sqs
        TopicArn: arn:aws:sns:us-east-2:759799978288:APPOINTMENT_TOPIC
        Endpoint: !GetAtt SQSPE.Arn
        FilterPolicy:
          countryISO:
            - PE

    SNSSubscriptionCL:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: sqs
        TopicArn: arn:aws:sns:us-east-2:759799978288:APPOINTMENT_TOPIC
        Endpoint: !GetAtt SQSCL.Arn
        FilterPolicy:
          countryISO:
            - CL

    SQSPolicyPE:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SQSPE
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "sqs:SendMessage"
              Resource: !GetAtt SQSPE.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: arn:aws:sns:us-east-2:759799978288:APPOINTMENT_TOPIC

    SQSPolicyCL:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SQSCL
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "sqs:SendMessage"
              Resource: !GetAtt SQSCL.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: arn:aws:sns:us-east-2:759799978288:APPOINTMENT_TOPIC
